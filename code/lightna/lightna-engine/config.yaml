# Path to the public folder accessible from Web where static assets will be placed
asset_dir: null
# List of Key-Value storages
storage:
  opcache:
    adapter: Lightna\Engine\App\Storage\Opcache
    options: [ ]
  database:
    adapter: Lightna\Engine\App\Storage\Database
    options:
      host: localhost
      port: 3306
      serializer: json
      dbname: ""
router:
  # List of router custom actions (name: class)
  action:
    page: Lightna\Engine\App\Router\Action\Page
    block: Lightna\Engine\App\Router\Action\Block
  routes:
    lightna/block: block
  bypass:
    rules:
      # Regular expressions for URL path, URL path excludes "/" at the beginning
      # Expression is performed after prepending "^" to avoid parsing a whole URL path
      url_starts_with: [ ]
      # If no route in Lightna you have 2 options:
      #   "404" - render 404 page by Lightna
      #   "bypass" - pass request to the app
      no_route: 404
    # Project's index.php to handle bypass
    file: null
    cookie:
      enabled: false
      name: null
entity:
  route:
  entity_route:
  config:
  page:
    layout: page
  no-route:
    layout: no-route
cli:
  command:
    update: Lightna\Engine\App\Console\Update
    deploy:asset:sign: Lightna\Engine\App\Console\Deploy\AssetSign
    deploy:opcache: Lightna\Engine\App\Console\Deploy\Opcache
    deploy:data: Lightna\Engine\App\Console\Deploy\Data
    indexer:process: Lightna\Engine\App\Console\Indexer\Process
  update:
    - Lightna\Engine\App\Update\Schema\Index\Changelog
    - Lightna\Engine\App\Update\Schema\Index\Triggers
    - Lightna\Engine\App\Update\Schema\Index\Queue
    - Lightna\Engine\App\Update\Schema\Storage\Database
default:
  storage: opcache
